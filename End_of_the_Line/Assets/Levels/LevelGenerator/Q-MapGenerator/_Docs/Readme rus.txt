Спасибо за установку Q-MapGenetator!



Обратная связь:

lidan-357@mail.ru
connect.unity.com/u/5a7ae5be03b002001c080760



Подготовка к работе

Создайте новые кнопки управления с именами "Crouch" и "Run" (без кавычек). Я предпочитаю использовать для них клавиши "left ctrl" и "left shift".

8 и 9 слои используются для корректной работы некоторых функций. Назовите их "Wall" и "Items in Hands" (без кавычек).

Откройте Q-MapGenerator/_Scenes/Scene_1



Папки

_Scenes - здесь находится базовая сцена проекта. На ней уже есть всё необходимое для работы генератора.
Подробнее о содержимом сцены можно прочесть далее.

NavMeshComponents - инструмент для создания навигационной сетки в режиме реального времени. Предоставлен благодаря стараниям команды Unity. Исходники и обучение по его использованию можно посмотреть здесь: https://unity3d.com/ru/learn/tutorials/topics/navigation/introduction-and-navigation-overview?playlist=17105

Prefabs - готовые объекты для функционирования генератора.

	Alpha Big Room, Alpha Cabine, Alpha Intersection, Alpha Room A, Alpha Room B, Alpha Room C, Alpha Short Corridor, Alpha Standart Corridor - локации, из которых строится карта. Макеты, состоят из простых белых блоков.

	Basic Door - двери, которые открываются при приближении игрока.

	Door Spawn - отмечает место, где должна появиться дверь. С тэгом "MapGenerated_Clean".

	Locations Spawns - состоит из множества коллайдеров, каждый из которых является потенциальным местом для создания локации.

	Map Generator - инструмент генерации карты.

	Map System - является основой для миникарты и рисует её.

	Minimap Wall - просто небольшой куб, используется при отрисовке карты.

	Pickup Spawn - место для появления объектов на карте.

	Player - основной префаб игрока, создаётся объектом Map Generator.

	Player Icon - значок, отражающий игрока на миникарте.

	Player UI - отображает количество ключей у игрока и анимацию, когда игрок их поднимает.

	Spawn Wall - стена, шириной и высотой равная двери. Удаляется при контакте с Door Spawn. Имеет вложенный объект с тэгом "MapGenerated_Clean". Вложенный объект создаёт указанный в нём Locations Spawns.

	Start Room - базовая локация, в которой начинает игрок.

	TestKey 1, 2, 3 - тестовые ключи, которые игрок может подобрать.



Скрипты

	ApplyMinimapTexture - применяет текстуру миникарты к объекту, на котором находится.

	BasickDoor - отвечает за открытие и закрытие двери. Рассчитан на то, что может реагировать на несколько объектов. Например, если двери открываются при приближении и игрока и монстра - они не закроются, пока из зоны действия не выйдет столько-же объектов, сколько вошло в неё.

	CreateMinimap - вместе со скриптом MapDraw рисует карту игрока и переносит её изображение на нужную текстуру.

	CreatePlace_forDoor - является частью объекта Door Spawn и удаляет компоненты с тэгом "Wall" при контакте. По задумке - удаляет объекты Spawn Wall.

	DoorColor_onMap - часть объекта Basic Door. Определяет цвет двери на мини-карте.

	KeysSettings - определяет цвет ключей. Нужен для корректной работы скрипта PlayerPickUp.

	LocationSettings - является составной частью локаций. Определяет тэг коллайдера в объекте Locations Spawns, в котором должна появиться локация.

	LocationsSpawn - отвечает за то, чтобы коллайдеры в объекте Locations Spawns удалялись при контакте с объектами с Rigidbody (floor в каждой локации). Таким образом, локаици никогда не пересекаются.

	LocationsSpawner - часть объекта Spawn Wall, создаёт указанный Locations Spawns.

	MapDraw - рисует мини-карту, которая затем отображается у игрока при помощи скрипта CreateMinimap.

	MapGenerator - основной скрипт. О его работе будет рассказано далее.

	MapSystemOffset - сдвигает центр мини-карты для её корректного отображения.

	ObjectsSpawnSettings - составная часть объектов и мест для их создания, позволяет выдать всем местам для создания объекта тэг "ObjectSpawn", и индивидуально настроить тип объектов и места их создания.

	PlayerController - простой скрипт контроллера.

	PlayerPickUp - часть контроллера игрока. При контакте с ключами - подбирает их.

	PlayerUI - отвечает за корректное отображение UI игрока.

	TestFigure - начальная позиция и вращение тестовых ключей.



Работа скрипта MapGenerator

В настройках скрипта вы указываете объект игрока (и следует ли его создавать), скорость генерации (пауза, которую скрипт делает между созданием различных объектов, 0.05 показало себя оптимальным вариантом). 
Список коридоров (коридоры могут в нём дублироваться для изменения соотношения коридоров на карте - нужный коридор каждый раз выбирается случайным образом). 
Настраивается параметр, отвечающий за то, как много мест для создания локаций следует поддерживать. Если их мало - создаются новые коридоры. 
А затем вы указываете список локаций и объектов и настраиваете их минимальное и максимальное количество.

Работу скрипта можно разделить на несколько этапов:

	Определение максимального количества локаций и объектов, установка длины загрузочной полосы в UI.
	
	Выбор локации из списка, поиск коллайдера с подходящим тегом (такие коллайдеры являются частью объекта Locations Spawns, который создаётся объектом Spawn Wall) и создание локации в этом коллайдере. Если, при этом, недостаточно свободных мест для локации - создаются новые коридоры, содержащие новые места для локаций.

	Создание навигационной сетки.

	Составление списка мест для создания объектов (сюда включаются места для создания дверей, места для создания ключей). Перемешивание списка.

	Выбор объекта и создание объекта в подходящем месте методом перебора.

	Очистка карты от мест создания объектов (тэг "ObjectSpawn") и мест создания новых локаций (тэг "MapGenerated_Clean").

	Завершение генерации, создание игрока.



Процесс создания новой локации:
https://youtu.be/JMULvSV6TPM

Советы по созданию своих локаций

Соблюдайте размерность - в тестовой версии всё рассчитано на то, что ширина двери составляет 3 юнита, высота - 2.5 юнита. Все локации укладываются друг с другом как в тетрисе.

Следите за поворотом локаций и поворотом мест их создания - чтобы дверь локации чётко совпадала с Spawn Wall объектами.